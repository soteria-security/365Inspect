$ErrorActionPreference = "Stop"

$errorHandling = "$((Get-Item $PSScriptRoot).Parent.FullName)\Write-ErrorLog.ps1"

. $errorHandling


function Inspect-CustomAntiMalwarePolicy {
Try {

	$policies = Get-MalwareFilterPolicy

	$customPolicies = @()

	$defaultPolicies = @()

	foreach ($policy in $policies){
		$customPolicies += ($policy | Where-Object {($_.IsDefault -eq $false) -and ($_.Name -notmatch "Preset")}).Name
		$defaultPolicies += ($policy | Where-Object {($_.IsDefault -eq $true) -or (($_.IsDefault -eq $false) -and ($_.Name -like "*Preset*"))}).Name
	}
	
	if (($customPolicies | Measure-Object).Count -gt 0){
		Return $null
	}Else {
		Return $defaultPolicies
	}

}
Catch {
Write-Warning "Error message: $_"
$message = $_.ToString()
$exception = $_.Exception
$strace = $_.ScriptStackTrace
$failingline = $_.InvocationInfo.Line
$positionmsg = $_.InvocationInfo.PositionMessage
$pscommandpath = $_.InvocationInfo.PSCommandPath
$failinglinenumber = $_.InvocationInfo.ScriptLineNumber
$scriptname = $_.InvocationInfo.ScriptName
Write-Verbose "Write to log"
Write-ErrorLog -message $message -exception $exception -scriptname $scriptname
Write-Verbose "Errors written to log"
}

}

return Inspect-CustomAntiMalwarePolicy


