$ErrorActionPreference = "Stop"

$errorHandling = "$((Get-Item $PSScriptRoot).Parent.FullName)\Write-ErrorLog.ps1"

. $errorHandling

function Audit-EMFPAN{
try{
$EMFPANData = @()
$EMFPAN = Get-MalwareFilterPolicy -Identity Default | select Identity, EnableInternalSenderAdminNotifications,InternalSenderAdminAddress
if ($EMFPAN.EnableInternalSenderAdminNotifications -match 'False' -or $EMFPAN.EnableInternalSenderAdminNotifications -eq $null){
$EMFPANData += " EnableInternalSenderAdminNotifications: "+$DURPAZAPPT1.EnableInternalSenderAdminNotifications
$EMFPANData += "`n InternalSenderAdminAddress: "+$DURPAZAPPT1.InternalSenderAdminAddress
return $EMFPANData
}
return $null
}catch{
Write-Warning "Error message: $_"
$message = $_.ToString()
$exception = $_.Exception
$strace = $_.ScriptStackTrace
$failingline = $_.InvocationInfo.Line
$positionmsg = $_.InvocationInfo.PositionMessage
$pscommandpath = $_.InvocationInfo.PSCommandPath
$failinglinenumber = $_.InvocationInfo.ScriptLineNumber
$scriptname = $_.InvocationInfo.ScriptName
Write-Verbose "Write to log"
Write-ErrorLog -message $message -exception $exception -scriptname $scriptname
Write-Verbose "Errors written to log"
}
}
return Audit-EMFPAN